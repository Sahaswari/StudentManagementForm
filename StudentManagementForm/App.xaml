<Application x:Class="StudentManagementForm.App"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
    xmlns:local="clr-namespace:StudentManagementForm"
             StartupUri="MainWindow.xaml">

    <Application.Resources>
        <Style x:Key="mainbutten" TargetType="Button">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Width" Value="131"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="DarkCyan" />
            <Setter Property="Margin" Value="12 20 0 20" />
            <Setter Property="HorizontalAlignment" Value="Center" />


            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1.5" BorderBrush="LightCyan" Padding="10" CornerRadius="8">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="DarkBlue"/>

                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Define a new button style in App.xaml -->

        <Style x:Key="Titletext" TargetType="TextBlock" >
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White" />

        </Style>
        <Style x:Key="ListView" TargetType="TextBlock" >
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextAlignment" Value="left"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="10 "/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="90"/>
        </Style>

        <Style x:Key="pointText" TargetType="TextBlock" >
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Margin" Value="20,10,20,10" />
            <Setter Property="Padding" Value="3,3,3,3" />
        </Style>

        <Style x:Key="pointBox" TargetType="TextBox" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="HorizontalAlignment" Value="left" />
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Width" Value="300" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Margin" Value="20,10,20,10" />
            <Setter Property="Padding" Value="3,3,3,3" />

        </Style>

        <Style x:Key="ComboBoxgen" TargetType="ComboBox" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="HorizontalAlignment" Value="left" />
            <Setter Property="Width" Value="300" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Margin" Value="20,10,20,10" />
            <Setter Property="Padding" Value="3,3,3,3" />

        </Style>

        <!-- Control button-->
        <Style x:Key="controlButton" TargetType="Button">
            <Setter Property="Width" Value="35" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="LightBlue" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="DarkRed" CornerRadius="4" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <!-- Mouse over back colour-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="Red" CornerRadius="4" >
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Menu button icon-->
        <Style x:Key="CntrolButtonIcon" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="LightYellow" />
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="18"/>
        </Style>

        <!-- Menu button icon-->
        <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="LightYellow" />
            <Setter Property="Width" Value="35"/>
            <Setter Property="Height" Value="35"/>
        </Style>

        <!-- Save button -->
        <Style x:Key="savebutten" TargetType="Button">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="Padding" Value="2 2 2 2"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="Margin" Value="20 10 20 10" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />

            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1.5" BorderBrush="LightCyan" Padding="10" CornerRadius="8">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="DarkBlue"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>

